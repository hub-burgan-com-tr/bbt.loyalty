// <auto-generated />
using System;
using Bbt.Campaign.EntityFrameworkCore.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Bbt.Campaign.EntityFrameworkCore.Migrations
{
    [DbContext(typeof(CampaignDbContext))]
    partial class CampaignDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.AchievementFrequencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AchievementFrequencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3628),
                            IsDeleted = false,
                            Name = "Anlık"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3630),
                            IsDeleted = false,
                            Name = "Aylık"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3632),
                            IsDeleted = false,
                            Name = "Yıllık"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.AchievementTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("AchievementTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(2435),
                            IsDeleted = false,
                            Name = "Mevduat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(2510),
                            IsDeleted = false,
                            Name = "Kredi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(2545),
                            IsDeleted = false,
                            Name = "Cashback"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ActionOptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ActionOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(2835),
                            IsDeleted = false,
                            Name = "Ödeme Cashback"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(2908),
                            IsDeleted = false,
                            Name = "Fatura Cashback"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.AuthorizationTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("AuthorizationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3906),
                            IsDeleted = false,
                            Name = "Insert"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3907),
                            IsDeleted = false,
                            Name = "Update"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3908),
                            IsDeleted = false,
                            Name = "View"
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3909),
                            IsDeleted = false,
                            Name = "Approve"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.BusinessLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("BusinessLines");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(600),
                            IsDeleted = false,
                            Name = "Bireysel (B)"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(904),
                            IsDeleted = false,
                            Name = "Ticari (T)"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(959),
                            IsDeleted = false,
                            Name = "Dijital (X)"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(995),
                            IsDeleted = false,
                            Name = "Ticari 1 (I)"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1035),
                            IsDeleted = false,
                            Name = "Ticari 2 (P)"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1068),
                            IsDeleted = false,
                            Name = "Ticari 3 (M)"
                        },
                        new
                        {
                            Id = 7,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1167),
                            IsDeleted = false,
                            Name = "Kurumsal (K)"
                        },
                        new
                        {
                            Id = 8,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1205),
                            IsDeleted = false,
                            Name = "Kurumsal 1 (A)"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignAchievementEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AchievementTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("ActionOptionId")
                        .HasColumnType("int");

                    b.Property<decimal?>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxUtilization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("Rate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AchievementTypeId");

                    b.HasIndex("ActionOptionId");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CampaignAchievements");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignChannelCodeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("ChannelCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignChannelCodes");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CampaignDetailImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignListImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContentEn")
                        .HasColumnType("ntext");

                    b.Property<string>("ContentTr")
                        .HasColumnType("ntext");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailEn")
                        .HasColumnType("ntext");

                    b.Property<string>("DetailTr")
                        .HasColumnType("ntext");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("SummaryEn")
                        .HasColumnType("ntext");

                    b.Property<string>("SummaryTr")
                        .HasColumnType("ntext");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId")
                        .IsUnique();

                    b.ToTable("CampaignDetails");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDocumentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DocumentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DocumentType")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("MimeType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CampaignDocuments");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime?>("ApproveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ContractId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBundle")
                        .HasColumnType("bit");

                    b.Property<bool>("IsContract")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("MaxNumberOfUser")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("Order")
                        .HasColumnType("int");

                    b.Property<int>("ParticipationTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ProgramTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("SectorId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TitleEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TitleTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ViewOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ParticipationTypeId");

                    b.HasIndex("ProgramTypeId");

                    b.HasIndex("SectorId");

                    b.HasIndex("ViewOptionId");

                    b.ToTable("Campaigns");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBranchEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("BranchCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId");

                    b.ToTable("CampaignRuleBranches");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBusinessLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("BusinessLineId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusinessLineId");

                    b.HasIndex("CampaignRuleId");

                    b.ToTable("CampaignRuleBusinesses");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleCustomerTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("CustomerTypeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId");

                    b.HasIndex("CustomerTypeId");

                    b.ToTable("CampaignRuleCustomerTypes");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<int>("CampaignStartTermId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("JoinTypeId")
                        .HasColumnType("int");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("CampaignStartTermId");

                    b.HasIndex("JoinTypeId");

                    b.ToTable("CampaignRules");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleIdentityEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignRuleId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Identities")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignRuleId");

                    b.ToTable("CampaignRuleIdentities");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignStartTermEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("CampaignStartTerms");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3529),
                            IsDeleted = false,
                            Name = "Katılım Anında"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3533),
                            IsDeleted = false,
                            Name = "Dönem Başlangıcı"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTargetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TargetGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.Property<int>("TargetOperationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("TargetId");

                    b.HasIndex("TargetOperationId");

                    b.ToTable("CampaignTargets");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTopLimitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TopLimitId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.HasIndex("TopLimitId");

                    b.ToTable("CampaignTopLimits");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ConstantsEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.ToTable("ServiceConstants");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CurrencyEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TRY",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3684),
                            IsDeleted = false,
                            Name = "TRY"
                        },
                        new
                        {
                            Id = 2,
                            Code = "GBP",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3685),
                            IsDeleted = false,
                            Name = "GBP"
                        },
                        new
                        {
                            Id = 3,
                            Code = "EUR",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3686),
                            IsDeleted = false,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 4,
                            Code = "USD",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3687),
                            IsDeleted = false,
                            Name = "USD"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CustomerCampaignEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFavorite")
                        .HasColumnType("bit");

                    b.Property<bool>("IsJoin")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CampaignId");

                    b.ToTable("CustomerCampaigns");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CustomerReportEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AchievementTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AchievementTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BranchName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessLineId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BusinessLineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CampaignCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CampaignStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CampaignStartDateStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CampaignStartTermId")
                        .HasColumnType("int");

                    b.Property<string>("CampaignStartTermName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerIdentifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTypeId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBundle")
                        .HasColumnType("bit");

                    b.Property<int>("IsContinuingCampaign")
                        .HasColumnType("int");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("JoinDateStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("JoinTypeId")
                        .HasColumnType("int");

                    b.Property<string>("JoinTypeName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CustomerReportView");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CustomerTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("CustomerTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1665),
                            IsDeleted = false,
                            Name = "Gerçek"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1764),
                            IsDeleted = false,
                            Name = "Tüzel"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1805),
                            IsDeleted = false,
                            Name = "Ortak"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1836),
                            IsDeleted = false,
                            Name = "Reşit Olmayan"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(1873),
                            IsDeleted = false,
                            Name = "Adi Ortaklık"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.JoinTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("JoinTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3451),
                            IsDeleted = false,
                            Name = "Tüm Müşteriler"
                        },
                        new
                        {
                            Id = 2,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3455),
                            IsDeleted = false,
                            Name = "Müşteri Özelinde"
                        },
                        new
                        {
                            Id = 3,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3456),
                            IsDeleted = false,
                            Name = "İş Kolu Özelinde"
                        },
                        new
                        {
                            Id = 4,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3457),
                            IsDeleted = false,
                            Name = "Şube Özelinde"
                        },
                        new
                        {
                            Id = 5,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3460),
                            IsDeleted = false,
                            Name = "Müşteri Tipi Özelinde"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.LanguageEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "TR",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3108),
                            IsDeleted = false,
                            Name = "Türkçe"
                        },
                        new
                        {
                            Id = 2,
                            Code = "EN",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3109),
                            IsDeleted = false,
                            Name = "İngilizce"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ModuleTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("ModuleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3884),
                            IsDeleted = false,
                            Name = "Campaign"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3886),
                            IsDeleted = false,
                            Name = "TopLimit"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3887),
                            IsDeleted = false,
                            Name = "Target"
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3888),
                            IsDeleted = false,
                            Name = "Report"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ParticipationTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ParticipationTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3845),
                            IsDeleted = false,
                            Name = "Otomatik Katılım"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3847),
                            IsDeleted = false,
                            Name = "Müşteri Seçimi"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3848),
                            IsDeleted = false,
                            Name = "Operatör Seçimi"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ProgramTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ProgramTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3709),
                            IsDeleted = false,
                            Name = "Sadakat"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3710),
                            IsDeleted = false,
                            Name = "Kampanya"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3711),
                            IsDeleted = false,
                            Name = "Kazanım"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.RoleAuthorizationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorizationTypeId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("ModuleTypeId")
                        .HasColumnType("int");

                    b.Property<int>("RoleTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AuthorizationTypeId");

                    b.HasIndex("ModuleTypeId");

                    b.HasIndex("RoleTypeId");

                    b.ToTable("RoleAuthorizations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorizationTypeId = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3931),
                            IsDeleted = false,
                            ModuleTypeId = 1,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 2,
                            AuthorizationTypeId = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3933),
                            IsDeleted = false,
                            ModuleTypeId = 1,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 3,
                            AuthorizationTypeId = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3934),
                            IsDeleted = false,
                            ModuleTypeId = 2,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 4,
                            AuthorizationTypeId = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3935),
                            IsDeleted = false,
                            ModuleTypeId = 2,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 5,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3936),
                            IsDeleted = false,
                            ModuleTypeId = 3,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 6,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3937),
                            IsDeleted = false,
                            ModuleTypeId = 4,
                            RoleTypeId = 1
                        },
                        new
                        {
                            Id = 7,
                            AuthorizationTypeId = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3938),
                            IsDeleted = false,
                            ModuleTypeId = 1,
                            RoleTypeId = 2
                        },
                        new
                        {
                            Id = 8,
                            AuthorizationTypeId = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3939),
                            IsDeleted = false,
                            ModuleTypeId = 2,
                            RoleTypeId = 2
                        },
                        new
                        {
                            Id = 9,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3940),
                            IsDeleted = false,
                            ModuleTypeId = 1,
                            RoleTypeId = 3
                        },
                        new
                        {
                            Id = 10,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3941),
                            IsDeleted = false,
                            ModuleTypeId = 2,
                            RoleTypeId = 3
                        },
                        new
                        {
                            Id = 11,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3942),
                            IsDeleted = false,
                            ModuleTypeId = 3,
                            RoleTypeId = 3
                        },
                        new
                        {
                            Id = 12,
                            AuthorizationTypeId = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3943),
                            IsDeleted = false,
                            ModuleTypeId = 4,
                            RoleTypeId = 3
                        },
                        new
                        {
                            Id = 13,
                            AuthorizationTypeId = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3944),
                            IsDeleted = false,
                            ModuleTypeId = 3,
                            RoleTypeId = 4
                        },
                        new
                        {
                            Id = 14,
                            AuthorizationTypeId = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3946),
                            IsDeleted = false,
                            ModuleTypeId = 3,
                            RoleTypeId = 4
                        },
                        new
                        {
                            Id = 15,
                            AuthorizationTypeId = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3947),
                            IsDeleted = false,
                            ModuleTypeId = 3,
                            RoleTypeId = 5
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.RoleTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("RoleTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3863),
                            IsDeleted = false,
                            Name = "isLoyaltyCreator"
                        },
                        new
                        {
                            Id = 2,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3866),
                            IsDeleted = false,
                            Name = "isLoyaltyApprover"
                        },
                        new
                        {
                            Id = 3,
                            Code = "3",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3867),
                            IsDeleted = false,
                            Name = "isLoyaltyReader"
                        },
                        new
                        {
                            Id = 4,
                            Code = "4",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3868),
                            IsDeleted = false,
                            Name = "isLoyaltyRuleCreator"
                        },
                        new
                        {
                            Id = 5,
                            Code = "5",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3870),
                            IsDeleted = false,
                            Name = "isLoyaltyRuleApprover"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.SectorEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Sectors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "Akr",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3360),
                            IsDeleted = false,
                            Name = "Akaryakıt"
                        },
                        new
                        {
                            Id = 2,
                            Code = "Chl",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3364),
                            IsDeleted = false,
                            Name = "Giyim"
                        },
                        new
                        {
                            Id = 3,
                            Code = "Edu",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3365),
                            IsDeleted = false,
                            Name = "Eğitim"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.StatusEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Statuses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3966),
                            IsDeleted = false,
                            Name = "Taslak"
                        },
                        new
                        {
                            Id = 2,
                            Code = "1",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3967),
                            IsDeleted = false,
                            Name = "Onaya Gönderildi"
                        },
                        new
                        {
                            Id = 3,
                            Code = "2",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3968),
                            IsDeleted = false,
                            Name = "Güncelleniyor"
                        },
                        new
                        {
                            Id = 4,
                            Code = "3",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3969),
                            IsDeleted = false,
                            Name = "Tarihçe"
                        },
                        new
                        {
                            Id = 10,
                            Code = "4",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3970),
                            IsDeleted = false,
                            Name = "Onaylandı"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDefinitionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetDefinitions");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("AdditionalFlowTime")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Condition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("DescriptionEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DescriptionTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FlowFrequency")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FlowName")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NumberOfTransaction")
                        .HasColumnType("int");

                    b.Property<string>("Query")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetDetailEn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TargetDetailTr")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.Property<int>("TargetSourceId")
                        .HasColumnType("int");

                    b.Property<int>("TargetViewTypeId")
                        .HasColumnType("int");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TriggerTimeId")
                        .HasColumnType("int");

                    b.Property<int?>("VerificationTimeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetId")
                        .IsUnique();

                    b.HasIndex("TargetSourceId");

                    b.HasIndex("TargetViewTypeId");

                    b.HasIndex("TriggerTimeId");

                    b.HasIndex("VerificationTimeId");

                    b.ToTable("TargetDetails");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("Targets");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TargetGroups");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupLineEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("TargetGroupId")
                        .HasColumnType("int");

                    b.Property<int>("TargetId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TargetGroupId");

                    b.HasIndex("TargetId");

                    b.ToTable("TargetGroupLines");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetOperationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetOperations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3571),
                            IsDeleted = false,
                            Name = "ve"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3572),
                            IsDeleted = false,
                            Name = "veya"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3573),
                            IsDeleted = false,
                            Name = "kesişim"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3574),
                            IsDeleted = false,
                            Name = "fark"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetSourceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("TargetSources");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3827),
                            IsDeleted = false,
                            Name = "Akış"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3829),
                            IsDeleted = false,
                            Name = "Sorgu"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetViewTypeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TargetViewTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3734),
                            IsDeleted = false,
                            Name = "Progress Bar"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3736),
                            IsDeleted = false,
                            Name = "Bilgi"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3737),
                            IsDeleted = false,
                            Name = "Görüntülenmeyecek"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TopLimitEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AchievementFrequencyId")
                        .HasColumnType("int");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDraft")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("MaxTopLimitAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxTopLimitRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("MaxTopLimitUtilization")
                        .HasMaxLength(250)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("RefId")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AchievementFrequencyId");

                    b.HasIndex("CurrencyId");

                    b.ToTable("TopLimits");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TriggerTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("TriggerTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3794),
                            IsDeleted = false,
                            Name = "Hedefe Ulaşıldığı Anda"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3795),
                            IsDeleted = false,
                            Name = "Tamamlandıktan Sonra"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.UserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("LastProcessDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleTypeId");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.VerificationTimeEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("VerificationTimes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3811),
                            IsDeleted = false,
                            Name = "İlk Kontrol Edildiğinde"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3813),
                            IsDeleted = false,
                            Name = "Her Kontrol Edildiğinde"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.ViewOptionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(4)
                        .HasColumnType("nvarchar(4)");

                    b.Property<string>("CreatedBy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("ViewOptions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "SK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3417),
                            IsDeleted = false,
                            Name = "Sürekli Kampanyalar"
                        },
                        new
                        {
                            Id = 2,
                            Code = "DK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3419),
                            IsDeleted = false,
                            Name = "Dönemsel Kampanyalar"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AK",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3420),
                            IsDeleted = false,
                            Name = "Genel Kampanyalar"
                        },
                        new
                        {
                            Id = 4,
                            Code = "NG",
                            CreatedBy = "1",
                            CreatedOn = new DateTime(2022, 5, 27, 23, 20, 16, 160, DateTimeKind.Local).AddTicks(3421),
                            IsDeleted = false,
                            Name = "Görüntülenmeyecek"
                        });
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignAchievementEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.AchievementTypeEntity", "AchievementType")
                        .WithMany()
                        .HasForeignKey("AchievementTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ActionOptionEntity", "ActionOption")
                        .WithMany()
                        .HasForeignKey("ActionOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CurrencyEntity", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AchievementType");

                    b.Navigation("ActionOption");

                    b.Navigation("Campaign");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignChannelCodeEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithOne("CampaignDetail")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.CampaignDetailEntity", "CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignDocumentEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.ParticipationTypeEntity", "ParticipationType")
                        .WithMany()
                        .HasForeignKey("ParticipationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ProgramTypeEntity", "ProgramType")
                        .WithMany()
                        .HasForeignKey("ProgramTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.SectorEntity", "Sector")
                        .WithMany()
                        .HasForeignKey("SectorId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ViewOptionEntity", "ViewOption")
                        .WithMany()
                        .HasForeignKey("ViewOptionId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("ParticipationType");

                    b.Navigation("ProgramType");

                    b.Navigation("Sector");

                    b.Navigation("ViewOption");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBranchEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("Branches")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleBusinessLineEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.BusinessLineEntity", "BusinessLine")
                        .WithMany()
                        .HasForeignKey("BusinessLineId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("BusinessLines")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BusinessLine");

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleCustomerTypeEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("CustomerTypes")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CustomerTypeEntity", "CustomerType")
                        .WithMany()
                        .HasForeignKey("CustomerTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");

                    b.Navigation("CustomerType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignStartTermEntity", "CampaignStartTerm")
                        .WithMany()
                        .HasForeignKey("CampaignStartTermId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.JoinTypeEntity", "JoinType")
                        .WithMany()
                        .HasForeignKey("JoinTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("CampaignStartTerm");

                    b.Navigation("JoinType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleIdentityEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", "CampaignRule")
                        .WithMany("RuleIdentities")
                        .HasForeignKey("CampaignRuleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("CampaignRule");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTargetEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", "TargetGroup")
                        .WithMany()
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetEntity", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetOperationEntity", "TargetOperation")
                        .WithMany()
                        .HasForeignKey("TargetOperationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("Target");

                    b.Navigation("TargetGroup");

                    b.Navigation("TargetOperation");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignTopLimitEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TopLimitEntity", "TopLimit")
                        .WithMany("TopLimitCampaigns")
                        .HasForeignKey("TopLimitId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");

                    b.Navigation("TopLimit");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CustomerCampaignEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.CampaignEntity", "Campaign")
                        .WithMany()
                        .HasForeignKey("CampaignId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Campaign");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.RoleAuthorizationEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.AuthorizationTypeEntity", "AuthorizationType")
                        .WithMany()
                        .HasForeignKey("AuthorizationTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.ModuleTypeEntity", "ModuleType")
                        .WithMany()
                        .HasForeignKey("ModuleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.RoleTypeEntity", "RoleType")
                        .WithMany()
                        .HasForeignKey("RoleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AuthorizationType");

                    b.Navigation("ModuleType");

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetEntity", "Target")
                        .WithOne("TargetDetail")
                        .HasForeignKey("Bbt.Campaign.Core.DbEntities.TargetDetailEntity", "TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetSourceEntity", "TargetSource")
                        .WithMany()
                        .HasForeignKey("TargetSourceId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetViewTypeEntity", "TargetViewType")
                        .WithMany()
                        .HasForeignKey("TargetViewTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TriggerTimeEntity", "TriggerTime")
                        .WithMany()
                        .HasForeignKey("TriggerTimeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Bbt.Campaign.Core.DbEntities.VerificationTimeEntity", "VerificationTime")
                        .WithMany()
                        .HasForeignKey("VerificationTimeId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Target");

                    b.Navigation("TargetSource");

                    b.Navigation("TargetViewType");

                    b.Navigation("TriggerTime");

                    b.Navigation("VerificationTime");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupLineEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", "TargetGroup")
                        .WithMany("TargetGroupLines")
                        .HasForeignKey("TargetGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.TargetEntity", "Target")
                        .WithMany()
                        .HasForeignKey("TargetId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Target");

                    b.Navigation("TargetGroup");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TopLimitEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.AchievementFrequencyEntity", "AchievementFrequency")
                        .WithMany()
                        .HasForeignKey("AchievementFrequencyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Bbt.Campaign.Core.DbEntities.CurrencyEntity", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("AchievementFrequency");

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.UserRoleEntity", b =>
                {
                    b.HasOne("Bbt.Campaign.Core.DbEntities.RoleTypeEntity", "RoleType")
                        .WithMany()
                        .HasForeignKey("RoleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("RoleType");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignEntity", b =>
                {
                    b.Navigation("CampaignDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.CampaignRuleEntity", b =>
                {
                    b.Navigation("Branches");

                    b.Navigation("BusinessLines");

                    b.Navigation("CustomerTypes");

                    b.Navigation("RuleIdentities");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetEntity", b =>
                {
                    b.Navigation("TargetDetail")
                        .IsRequired();
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TargetGroupEntity", b =>
                {
                    b.Navigation("TargetGroupLines");
                });

            modelBuilder.Entity("Bbt.Campaign.Core.DbEntities.TopLimitEntity", b =>
                {
                    b.Navigation("TopLimitCampaigns");
                });
#pragma warning restore 612, 618
        }
    }
}
